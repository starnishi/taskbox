[{"/Users/star_nishi/Documents/Work/emphase/storybook/taskbox/src/components/Task.js":"1","/Users/star_nishi/Documents/Work/emphase/storybook/taskbox/src/App.js":"2","/Users/star_nishi/Documents/Work/emphase/storybook/taskbox/src/reportWebVitals.js":"3","/Users/star_nishi/Documents/Work/emphase/storybook/taskbox/src/components/Task.stories.js":"4","/Users/star_nishi/Documents/Work/emphase/storybook/taskbox/src/index.js":"5","/Users/star_nishi/Documents/Work/emphase/storybook/taskbox/src/components/TaskList.stories.js":"6","/Users/star_nishi/Documents/Work/emphase/storybook/taskbox/src/components/TaskList.js":"7","/Users/star_nishi/Documents/Work/emphase/storybook/taskbox/src/lib/redux.js":"8","/Users/star_nishi/Documents/Work/emphase/storybook/taskbox/src/components/InboxScreen.js":"9","/Users/star_nishi/Documents/Work/emphase/storybook/taskbox/src/components/InboxScreen.stories.js":"10"},{"size":1470,"mtime":1611379039574,"results":"11","hashOfConfig":"12"},{"size":528,"mtime":1611322750206,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1611322750206,"results":"15","hashOfConfig":"14"},{"size":1064,"mtime":1611379246817,"results":"16","hashOfConfig":"12"},{"size":500,"mtime":1611322750206,"results":"17","hashOfConfig":"14"},{"size":1632,"mtime":1611372158032,"results":"18","hashOfConfig":"14"},{"size":2108,"mtime":1611372333415,"results":"19","hashOfConfig":"14"},{"size":1688,"mtime":1611371872433,"results":"20","hashOfConfig":"12"},{"size":965,"mtime":1611376005699,"results":"21","hashOfConfig":"14"},{"size":844,"mtime":1611376212649,"results":"22","hashOfConfig":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xhww24",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"a8luwu",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},"/Users/star_nishi/Documents/Work/emphase/storybook/taskbox/src/components/Task.js",[],"/Users/star_nishi/Documents/Work/emphase/storybook/taskbox/src/App.js",[],"/Users/star_nishi/Documents/Work/emphase/storybook/taskbox/src/reportWebVitals.js",[],"/Users/star_nishi/Documents/Work/emphase/storybook/taskbox/src/components/Task.stories.js",["44"],"/Users/star_nishi/Documents/Work/emphase/storybook/taskbox/src/index.js",[],"/Users/star_nishi/Documents/Work/emphase/storybook/taskbox/src/components/TaskList.stories.js",["45"],"/Users/star_nishi/Documents/Work/emphase/storybook/taskbox/src/components/TaskList.js",[],"/Users/star_nishi/Documents/Work/emphase/storybook/taskbox/src/lib/redux.js",[],"/Users/star_nishi/Documents/Work/emphase/storybook/taskbox/src/components/InboxScreen.js",[],"/Users/star_nishi/Documents/Work/emphase/storybook/taskbox/src/components/InboxScreen.stories.js",["46"],"// src/components/InboxScreen.stories.js\n\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { action } from '@storybook/addon-actions';\nimport { PureInboxScreen } from './InboxScreen';\nimport * as TaskListStories from './TaskList.stories';\n\n// A super-simple mock of a redux store\nconst store = {\n    getState: () => {\n      return {\n        tasks: TaskListStories.Default.args.tasks,\n      };\n    },\n    subscribe: () => 0,\n    dispatch: action('dispatch'),\n  };\n  \n  export default {\n    component: PureInboxScreen,\n    decorators: [story => <Provider store={store}>{story()}</Provider>],\n    title: 'InboxScreen',\n  };\n  \n  const Template = args => <PureInboxScreen {...args} />;\n  \n  export const Default = Template.bind({});\n  \n  export const Error = Template.bind({});\n  Error.args = {\n    error: 'Something',\n  };",{"ruleId":"47","severity":1,"message":"48","line":7,"column":1,"nodeType":"49","endLine":10,"endColumn":3},{"ruleId":"47","severity":1,"message":"48","line":8,"column":1,"nodeType":"49","endLine":12,"endColumn":3},{"ruleId":"47","severity":1,"message":"48","line":20,"column":3,"nodeType":"49","endLine":24,"endColumn":5},"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration"]